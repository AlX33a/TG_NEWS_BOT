from telebot import types

import db_log
import parser
from manager import bot


# –î–µ–π—Å—Ç–≤–∏—è –∫–æ–º–∞–Ω–¥
def bot_start(user_id, mes):
    if db_log.user_check(user_id) == str(user_id):
        start_message(mes)
    else:
        db_log.add_new_id(user_id)
        first_start_message(mes)
def help_message(mes):
    markup = first_panel()
    bot.send_message(mes.chat.id, f'''–£ –º–µ–Ω—è —Ç—ã –º–æ–∂–µ—à—å: –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–≤–æ–∏ –Ω–æ–≤–æ—Å—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ set my news –∏ –ø–æ–ª—É—á–∞—Ç—å –∏—Ö –ø–æ –∫–Ω–æ–ø–∫–µ my news, –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø–æ —ç—Ç–æ–π –∫–Ω–æ–ø–∫–µ —Ç—ã –ø–æ–ª—É—á–∏—à—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏. –¢–∞–∫–∂–µ –ø–æ –∫–Ω–æ–ø–∫–µ services —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º.
    ''', reply_markup=markup)

# –û—Ç–≤–µ—Ç—ã
def start_message(mes):
    markup = first_panel()
    bot.send_message(mes.chat.id, f"""–ò —Ç–µ–±–µ –¥–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, –ª—é–±–∏—Ç–µ–ª—å –Ω–æ–≤–æ—Å—Ç–µ–π!\n–ï—Å–ª–∏ –∑–∞–±—ã–ª –ø—Ä–æ –º–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–∏—à–∏ /help
    """, reply_markup=markup)
def first_start_message(mes):
    markup = first_panel()
    bot.send_message(mes.chat.id, f"""–ü—Ä–∏–≤–µ—Ç!\n–Ø –≤–∏–∂—É —Ç—ã –Ω–æ–≤–µ–Ω—å–∫–∏–π.\n–ú–µ–Ω—è –∑–æ–≤—É—Ç Miig bot!\n–°–æ–≤–µ—Ç—É—é —Ç–µ–±–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å –º–æ–∏–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –ø—Ä–∏ –ø–æ–º–æ—â–∏ /help
    """, reply_markup=markup)
def services(mes):
    markup = second_panel()
    bot.send_message(mes.chat.id, '–ó–¥–µ—Å—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –Ω–æ–≤–æ—Å—Ç–µ–π.', reply_markup=markup)
def my_news_message(mes, user_id):
    k = 0
    if db_log.service_check(user_id)[0:1] == '1':
        parser.weather(mes)
        k += 1
    if db_log.service_check(user_id)[1:2] == '1':
        parser.news(mes)
        k += 1
    if db_log.service_check(user_id)[2:3] == '1':
        parser.cripto(mes)
        k += 1
    else:
        if k == 0:
            bot.send_message(mes.chat.id, '–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ :(')
        else:
            pass
def news_set_first(mes, user_id):
    markup = set_panel(user_id)
    bot.send_message(mes.chat.id, '–ö–∞–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ my news.', reply_markup=markup)
def error_message(mes):
    bot.send_message(mes.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∞ –ø–∞–Ω–µ–ª–∏.')
def base_message(mes):
    markup = first_panel()
    bot.send_message(mes.chat.id, f'''–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É.
    ''', reply_markup=markup)
def news_set(mes, user_id):
    markup = set_panel(user_id)
    bot.send_message(mes.chat.id, '–°–¥–µ–ª–∞–Ω–æ, —á—Ç–æ-—Ç–æ –µ—â–µ?', reply_markup=markup)

# –ö–Ω–æ–ø–∫–∏
def first_panel():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    m1 = types.KeyboardButton('set my news')
    m2 = types.KeyboardButton('my news')
    m3 = types.KeyboardButton('services')
    return markup.add(m1, m2, m3)
def second_panel():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    m5 = types.KeyboardButton('üå§ –ü–æ–≥–æ–¥–∞ üå©')
    m6 = types.KeyboardButton('üì∞ –ù–æ–≤–æ—Å—Ç–∏ üì¶')
    m7 = types.KeyboardButton('üí∞ –ö—Ä–∏–ø—Ç–æ ü™ô')
    m8 = types.KeyboardButton('‚óÄÔ∏è')
    return markup.add(m5, m6, m7, m8)

# –ü–∞–Ω–µ–ª—å
def set_panel(user_id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    if db_log.service_check(user_id)[0:1] == '1':
        m9 = types.KeyboardButton('üå§ –ü–æ–≥–æ–¥–∞ üå© ‚úÖ')
    else:
        m9 = types.KeyboardButton('üå§ –ü–æ–≥–æ–¥–∞ üå© ‚ûï')
    if db_log.service_check(user_id)[1:2] == '1':
        m10 = types.KeyboardButton('üì∞ –ù–æ–≤–æ—Å—Ç–∏ üì¶ ‚úÖ')
    else:
        m10 = types.KeyboardButton('üì∞ –ù–æ–≤–æ—Å—Ç–∏ üì¶ ‚ûï')
    if db_log.service_check(user_id)[2:3] == '1':
        m11 = types.KeyboardButton('üí∞ –ö—Ä–∏–ø—Ç–æ ü™ô ‚úÖ')
    else:
        m11 = types.KeyboardButton('üí∞ –ö—Ä–∏–ø—Ç–æ ü™ô ‚ûï')
    m12 = types.KeyboardButton('‚óÄÔ∏è')
    return markup.add(m9, m10, m11, m12)
